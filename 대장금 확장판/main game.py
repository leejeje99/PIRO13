import webbrowser
import digit_baseball
import sonny_soccer
import enneagram 
import typinggame
import square2048
import one_card
import sys
from time import sleep
import time
import random


def printProgress(iteration, total, prefix='', suffix='', decimals=1, barLength=100): 
    formatStr = "{0:." + str(decimals) + "f}" 
    percent = formatStr.format(100 * (iteration / float(total))) 
    filledLength = int(round(barLength * iteration / float(total))) 
    bar = '#' * filledLength + '-' * (barLength - filledLength) 
    sys.stdout.write('\r%s |%s| %s%s %s' % (prefix, bar, percent, '%', suffix)), 
    if iteration == total: 
        sys.stdout.write('\n') 
        sys.stdout.flush()


class Janggold:
    def __init__(self):
        self.cooklist=[]
        self.badlist = ['두리안', '엔진오일', '염색약', '에프킬라', 'USB',
                        '지우개똥', '할머니의 양산', '깡이가 먹다 남은 사료', '이장님의 막걸리', '생선뼈']
    #나쁜 재료에서 6개 랜덤추출 
    def rnd_bad(self):
        self.badthing = random.sample(self.badlist, 1)
        self.badlist.remove(self.badthing[0])
        return self.badthing[0]
  
    #게임1 숫자야구
    def result_baseball(self):
        if digit_baseball.digit_baseball():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********소시지를 획득하였다**********')
            print('\n\n\n\n')
            self.cooklist.append('소시지')
        else:
            print('\n\n\n\n')
            time.sleep(2)
            self.cooklist.append(Janggold.rnd_bad(self))
            print('**********'+str(self.badthing[0])+'을 획득하였다**********')
            print('\n\n\n\n')

  
   #게임2 손흥민
    def result_sonny_soccer(self):
        if sonny_soccer.sonny():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********라면사리를 획득하였다**********')
            print('\n\n\n\n')
            time.sleep(2)
            self.cooklist.append('라면사리')
        else:
            print('\n\n\n\n')
            time.sleep(2)
            self.cooklist.append(Janggold.rnd_bad(self))
            print('**********'+str(self.badthing[0])+'을 획득하였다**********')
            print('\n\n\n\n')

   
    #게임3 2048
    def result_2048(self):
        if square2048.do2048():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********베이크드빈을 획득하였다**********')
            print('\n\n\n\n')
            self.cooklist.append('베이크드빈')
        else:
            print('\n\n\n\n')
            time.sleep(2)
            self.cooklist.append(Janggold.rnd_bad(self))
            print('**********'+str(self.badthing[0])+'을 획득하였다**********')
            print('\n\n\n\n')
    
    #게임4 단어찾기 --
    def result_typing(self):
        if typinggame.typing_game():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********김치를 획득하였다**********')
            print('\n\n\n\n')
            self.cooklist.append('김치')
        else:
            print('\n\n\n\n')
            time.sleep(2)
            self.cooklist.append(Janggold.rnd_bad(self))
            print('**********'+str(self.badthing[0])+'을 획득하였다**********')
            print('\n\n\n\n')
    
    #게임5 애니
    def result_enneagram(self):
        if enneagram.enneagram():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********햄을 획득하였다**********')
            self.cooklist.append('햄')
        else:
            self.cooklist.append(Janggold.rnd_bad(self))
            print('\n\n\n\n')
            time.sleep(2)
            print('**********'+str(self.badthing[0])+'을 획득하였다**********')
            print('\n\n\n\n')

    #게임6
    def result_one_card(self):
        if one_card.one_card():
            print('\n\n\n\n')
            time.sleep(2)
            print('**********멸치육수를 획득하였다**********')
            print('\n\n\n\n')
            self.cooklist.append('멸치육수')
            
        else:
            self.cooklist.append(Janggold.rnd_bad(self))
            print('\n\n\n\n')
            time.sleep(2)
            print('**********'+str(self.badthing)+'을 획득하였다**********')
            print('\n\n\n\n')

    def scorecal(self):
        self.realcooklist = ['라면사리', '소시지', '베이크드빈', '김치', '햄', '멸치육수']
        self.score = 0
        print("당신의 부대찌개에 들어가는 재료")
        print("="*50)
        for i in range(6):
            print(str(self.cooklist[i]), end=" ")
            if self.cooklist[i] == self.realcooklist[i]:
                self.score += 16.67
        a = round(self.score)

        print("\n"+"\n"+"\n"+"획득한 점수 계산 중")
        print("="*50)
        print("총점 ", a)

        if a >= 65:
            print('''
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(  %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.        /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/          &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/                  (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%                    %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@.                                                                                        .@@@@@
@@@@@@@@#                                                                                  &@@@@@@@@
@@@@@@@@@@@@.                                                                          .@@@@@@@@@@@@
@@@@@@@@@@@@@@@(                                                                    #@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@&                                                             .@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@*                                                      (@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@                                                @@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*                                        (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                   *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*                                    %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#                                      &@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                    ,.                     @@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@*                  #@@@@@@(                  *@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@#               ,@@@@@@@@@@@@@@.               %@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@&             #@@@@@@@@@@@@@@@@@@@@/             @@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@           @@@@@@@@@@@@@@@@@@@@@@@@@@@@           @@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@        #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/       .@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@     .&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%     *@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@*  /@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*  #@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
''')
            print('왕의 칭찬')

        else:
            print('\n\n\n장금아, 내 이럴줄 알고 종로 요리학원을 끊어두었다.\n그동안 나에게 애쓴 보답이니, 필히 듣고 더 맛있는 부대찌개를 준비해보도록 하거라')

                      
        

#메인설정    
main = Janggold()
url = 'https://www.youtube.com/watch?v=zNe2fVqqY8Q'
webbrowser.open(url, new=1, autoraise=True)
sleep(18)
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#,    ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@(&@@@@@@@@@@@@@@@@@@@@@@@@%,,#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@,    @@@@@@@@@@@@@@@@@@@@  ,,*&@@@@@@@@@@@@@@@@@@@@@@@@@,,@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@  *   @@@@@@@@@@@@@@@@@@@@@@@*    &@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@     @@@@@@@@@@@@@@@@@@@@   *#@@@@@@@@@@@@@@@@@@@@@@@  &@@@,  &@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@         ,@@@@@@@@@@@@@@&  ,, #@@@@@@@@@@@@@@@@@@@@@        &*  ,@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@,          ,#@@@@@@@@@@@@@@@&*,@%*    , (@&,,,@@@@@@@@@* %@@%     @@&    /@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@,    @@@@@@@@@@@@@/ ,,     #%@@@@@%*     ,@@@@@@@* &@@@@@@@&(@@@@@@/      *#&@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@,    @@,(@@@@@@@@@@@@@@@@, &@@@@,  ,*#@@@@@@@@@( ,&@@@,,        ,@@@@@@@#,      (@@@@@')
sleep(0.03); print('@@@@@@@@@@@@(    *@@@@%,   *@@@@@@@@@@@  @,        /@@@@@@@@@&@@@@@@@@%%&%    ,@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@*     @@@@@@@@@*    ,@@@@@@@@  @@@@*       #@@@@@@@@@@@@@@@@@@%    /@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@%    &@@@@@@@, &@(  *#@@@@&@@@@@@@@@@@@@@@@@@,    (@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@,   *@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*%@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
sleep(0.03); print('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@')
#게임 플룻 1 오프닝 
print('\n\n')
for i in range(0, 100):
    sleep(0.05)
    printProgress(i, 100, '궁궐로 가는중:', '입궐!', 1, 50)
print('\n\n\n\n')

sleep(3)
print('''                                        CAPTAINGOLD
........................................,-'  ,-'_______'-, 
....................................,-'  ,-'_||____||_'-,. '-,
............................(_,~' ,~'___||____,||___'~, '~,_)
................................'~'||___||,,-"-,,||__||'~'
....................................||__,~'  ,~'~, '~,__||
....................................||~'  ,~'//"'\\'~, '~||
..................................,~'  ,~'__||__||__'~,  '~,
.............................,~'  ,~'_____||__||_____'~,  '~,)
....................(_,~' ,~'_________||__||_________'~, '~,_)
......................''~'||_________,||__||_________||'~''______)
...........................||_________,||__||_________||____________)
...........................||_________,||__||_________||______
.......................,-'"""""""""""""=====""""""""'"""'-,______
..................,-\'______________========____________\'-, ''')
sleep(3)
#
print('\n\n\n\n====================================================================================================')
print('                                    Welcome to 대장금 world                                          ')
sleep(1)
print('====================================================================================================')
print('지금까지 이런 게임은 없었다! 누군가 콘솔 게임의 미래를\n묻거든 고개를 들어 대장금PC를 보게하라! \n전율하라! 조선의 스펙타클 대서사시!\n\n\n')
print('====================================================================================================')
sleep(3)
print('                                        게임 진행 방식                                               ')
sleep(1)
print('====================================================================================================')
print('각 게임을 통과하여 식재료를 모은 뒤 임금님을 위한 부대찌개를\n만들어라! 각 식재료마다 16점의 점수가 부여되고 \n65점을 넘어야 왕의 칭찬을 받을 수 있다!\n\n\n\n')
sleep(3)
print('====================================================================================================\n\n\n')
print('                                      행운을 빈다.......                                             \n\n\n')
print('====================================================================================================')
sleep(3)
print('\n\n\n')

#게임 플룻 2 체육대회 
sleep(3)
main.result_sonny_soccer()
main.result_baseball()
sleep(3)
main.result_2048()
main.result_typing()
main.result_enneagram()
main.result_one_card()

main.scorecal()







